#!/usr/bin/env python
from unittest import *
from util.Tree import *
from util.List import *
#print root

'''
Description:
    1. mentain a stack to store the index of latest "("
Time Complexity: O(N)
Result: AC
    important
'''
class Solution:

    # @param s, a string
    # @return an integer
    def longestValidParentheses(self, s):
        if len(s) == 0: return 0
        stack = []
        nMax = 0
        for i in range(len(s)):
            if s[i] == "(":
                stack.append((i, "("))
            else:
                if len(stack)!=0 and stack[-1][1] == "(":
                    stack.pop()
                    if len(stack) == 0:
                        nMax = max(nMax, i+1)
                    else:
                        nMax = max(nMax, i-stack[-1][0])
                else:
                    stack.append((i, ")"))

        return nMax

s = Solution()
#print s.longestValidParentheses("((")
print s.longestValidParentheses(")()())()()(")

#List.prettyPrint(head)
#Tree.prettyPrint(root)
