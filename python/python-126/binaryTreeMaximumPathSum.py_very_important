#!/usr/bin/env python
from unittest import *
from util.Tree import *
#print root

'''
Description:
    1. Binary Search
    2. return (path_sum, weighted_height)
Time Complexity: ACCC
Result:
    Very important !!!!!!!

    pay attention:
    you have to pay attention to the leaf
'''

class Solution:
    def solve(self, root):
        if root == None: return (-1000000, -10000000)
        if root.left == None and root.right == None: return (root.val, root.val)
        l_sum, l_height = self.solve(root.left)
        r_sum, r_height = self.solve(root.right)
        path_sum = max((max(l_height + r_height, l_height, r_height, 0) + root.val), l_sum, r_sum)
        weighted_height = max(l_height, r_height, 0) + root.val
        return (path_sum, weighted_height)
    
    def maxPathSum(self, root):
        path_sum, weighted_height = self.solve(root)
        return path_sum

root = TreeNode(-1)
root.left = TreeNode(-2)
s = Solution()
print s.maxPathSum(root)
Tree.prettyPrint(root)


