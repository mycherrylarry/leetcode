#!/usr/bin/env python
from unittest import *

'''
Description:
    1. simple DFS
    2. needs practise
Time Complexity:
Result: AC
'''


class Solution:
    # index starts from 1
    def solve(self, route, result, n, k, index):
        if len(route) == k:
            result.append([item for item in route])
            return
        if index > n:
            return
        # range(index, n+1) = [index, index+1, .... n]
        for i in range(index, n+1):
            route.append(i)
            self.solve(route, result, n, k, i+1)
            route.pop()
    
    def combine(self, n, k):
        result = []
        route = []
        self.solve(route, result, n, k, 1)
        return result

s = Solution()
print s.combine(4, 2)
print s.combine(4, 3)
print s.combine(4, 1)

