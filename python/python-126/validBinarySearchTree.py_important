#!/usr/bin/env python
from unittest import *
#print root
from util.Tree import *

'''
Description:
Time Complexity: O(N)
Result: AC
'''

class Solution:
    def validBST(self, root, MIN, MAX):
        if root == None: return True
        if root.val <= MIN or root.val >= MAX:
            return False
        return self.validBST(root.left, MIN, root.val) and self.validBST(root.right, root.val, MAX)

    def isValidBST(self, root):
        if root == None: return True
        p = root
        MIN, MAX = root.val, root.val
        while p.left != None:
            MIN = p.left.val
            p = p.left
        p = root
        while p.right != None:
            MAX = p.right.val
            p = p.right
        MIN -= 1
        MAX += 1
        return self.validBST(root, MIN, MAX)

root = TreeNode(4)
root.left = TreeNode(3)
root.right = TreeNode(5)
root.right.left = TreeNode(1)
root.right.right = TreeNode(6)
s = Solution()
print s.isValidBST(root)
#s = Solution()
