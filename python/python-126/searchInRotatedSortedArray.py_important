#!/usr/bin/env python
from unittest import *
#print root

'''
(i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2).
Description:
    Binary Search
Time Complexity:
Result: AC
IMPORTANT
'''

class Solution:
    def search(self, A, target):
        i, j = 0, len(A)
        while i< j:
            mid = (i+j)/2
            if A[mid] == target:
                return mid
            elif A[mid] < target:
                if A[j-1] < target and A[i] >= A[mid]:
                    j = mid
                else:
                    i = mid + 1
            else:
                if A[i] > target and A[j-1] <= A[mid]:
                    i = mid + 1
                else:
                    j = mid
        return -1

s = Solution()
A = [5,1,3]
A = [7,8,1,2,3,4,5,6]
#A = [4,5,6,7,0,1,2]
print s.search(A, 3)
print s.search(A, 2)
print s.search(A, 3)
print s.search(A, 4)
print s.search(A, 5)
print s.search(A, 7)
print s.search(A, 9)

