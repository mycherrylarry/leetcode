#!/usr/bin/env python
from unittest import *

'''
Description:
Time Complexity:
Result: AC
IMPORTANT
Reference: http://blog.csdn.net/doc_sgl/article/details/11805519
'''
class Solution:
    def solve(self, li):
        li.append(0)
        result = 0
        # stack = [index]
        stack = []
        i = 0
        while i < len(li):
            if len(stack) == 0 or (li[stack[-1]] <= li[i]):
                stack.append(i)
                i += 1
            else:
                top = stack.pop()
                if len(stack) == 0:
                    result = max(result, li[top]*i)
                else:
                    # pay attention
                    result = max(result, li[top]*(i - stack[-1] - 1))
        return result
    
    def largestRectangleArea(self, height):
        return self.solve(height)
s = Solution()
print s.largestRectangleArea([2,1,5,6,2,3])
print s.largestRectangleArea([])
print s.largestRectangleArea([2])
print s.largestRectangleArea([2,2,2,2,1])
print s.largestRectangleArea([2,0,2])
